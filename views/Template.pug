//
  This is the template for adding new exercises.
  Copy this into:
    Views/EXERCISE_NAME/Exercise.pug
  And the server will load the pug for all requests to /EXERCISE_NAME.

  To make the exercise:
    - Update all script URLs (These currently point to /Template/)
    - Update the EXERCISE_NAME
    - Update VIDEO_FRAME's url. This should point to whatever the H5P video is
        called. See the H5P Server's Readme for more details about this ..
    - Update the #template > .element. This will be cloned for every new element
        which is created and should look like a template for the exercise.


extends ../ods_video.pug

block EXERCISE_HEAD
    script(type='text/javascript', src='/exercise/Template/JS/Model/ModelTemplate.js')
    script(type='text/javascript', src='/exercise/Template/JS/AnswerTypes/AnswerTemplate.js')
    script(type='text/javascript', src='/exercise/Template/JS/Questions/QuestionTemplate.js')
    script(type='text/javascript', src='/exercise/Template/JS/QuestionTypes/QuestionTypeTemplate.js')
    script(type='text/javascript', src='/exercise/Template/JS/Defs.js')
    script(type='text/javascript', src='/exercise/Template/JS/DomDefs.js')
    script(type='text/javascript', src='/exercise/Template/JS/Element.js')
    script(type='text/javascript', src='/exercise/Template/JS/View.js')
    script(type='text/javascript', src='/exercise/Template/JS/Events.js')
    script(type='text/javascript', src='/exercise/Template/JS/Exercise.js')
    script(type='text/javascript', src='/exercise/Template/JS/Control.js')
    script(type='text/javascript', src='/exercise/Template/JS/main.js')
    link(href='/exercise/Template/Views/css/Style.css', rel='stylesheet', type='text/css')

block EXERCISE_NAME
  | Name: Short Description

block VIDEO_FRAME
  iframe#videoFrame(src='http://' + h5pUrl + '/VIDEO_NAME', scrolling="no", allowfullscreen="true", webkitallowfullscreen="true", mozallowfullscreen="true")

block EXERCISE_CONTENT
  .exercise.grid(style='margin: 20px; padding: 10px;')
    strong(style='font-size:1.25em;')  Exercise
    .row
      .col-12.questionFrame
        .questionBody
          .instructionsBody(style='margin-top: 20px;')
            p  instructions
          #input_container.col-8
            input.modelEntry.bottom(type='text', placeholder='type in the value to be added here')
            #button_enter
          .parametersBody
            p  params
          .modelBody.flexCol.borderized(style='margin-top: 10px;')
            .modelMain.col-12
              div#animationDuration.animationDuration.anim1
              img#trash.trashCan(src='exercise/Base/images/trashcan.png')
              #model.modelDisplay.col-6.round
        #messageDiv.col-8.no-visibility.center.textCentered
          input#message.col-12.bottom.border-mid(type='text', value='', readonly='')
        .questionButtons
          // TODO rename this class
          .prevArrowDiv
            #prevArrow.button(onclick='return false;')
            // TODO set up event handlers and probably rename this class from arrow
          .checkAndShowDiv
            .checkAnswerButton(onclick='return false;')  Check Answer
            // TODO change this
            .showAnswerButton(onclick='return false;')  Show Answer
            // TODO change this
          .nextArrowDiv
            #nextArrow.button(onclick='return false;')
            // TODO set up event handlers
      #template.hidden
        //
          For now, stuff inside here is a reference to the HTML that should be used ...
          Anything here will be copied later, inside some code, to make
          new HTML elements.
          TODO made these square. Looks better imo, especially for NULL
        .element
          span.verticallyCentered  TEXT
